name: PR Evaluation
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - edited
    branches:
      - main
jobs:
  semantic_pr:
    name: Semantic PR title
    runs-on: ubuntu-latest
    if: ${{ github.event.action != 'edited' || github.event.changes.title != null }}
    steps:
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            fix
            feat
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          subjectPattern: ^(?![A-Z])(?=.{1,50}$).+$
          subjectPatternError: >
            The subject "{subject}" found in the pull request title "{title}"

            didn't match the configured pattern. Please ensure that the subject

            doesn't start with an uppercase character & not have more than 50 characters.
  detect-unresolved-conflicts:
    name: Detect unresolved merge conflicts
    runs-on: ubuntu-latest
    needs: semantic_pr
    steps:
      - uses: actions/checkout@v4
      - name: List files with merge conflict markers
        run: git --no-pager grep "<<<<<<<" ":(exclude).github/" || true
      - name: Fail or succeed job if any files with merge conflict markers have been
          checked in
        run: exit $(git grep "<<<<<<<" ":(exclude).github/" | wc --lines)
  linters:
    name: Linting checks
    runs-on: ubuntu-latest
    needs: semantic_pr
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Get node version
        id: node
        run: |
          echo "::set-output name=version::$(node -v)"
      - name: Get node_modules cache
        uses: actions/cache@v3.0.2
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.lock') }}-${{
            steps.node.outputs.version }}
      - name: Install dependencies
        run: npm install
      - name: Run linters
        run: npm run lint
  formatter:
    name: Check code format
    runs-on: ubuntu-latest
    needs: semantic_pr
    strategy:
      matrix:
        node-version: 20.x
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get node version
        id: node
        run: |
          echo "::set-output name=version::$(node -v)"
      - name: Get node_modules cache
        uses: actions/cache@v3.0.2
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/package.lock') }}-${{
            steps.node.outputs.version }}
      - name: Install dependencies
        run: npm install
      - name: Run tests
        run: npm run format:check
